
mixin domainSearchInput(domainSearchParams)
  - domainSearchParams                       = domainSearchParams || {};
  - domainSearchParams.cicode                = domainSearchParams.cicode || "";
  - domainSearchParams.buttonText            = domainSearchParams.buttonText || "[@L[cds.sales/homepage/locales/en:domain-search-btn]@L]";
  - domainSearchParams.placeholderText       = domainSearchParams.placeholderText || "[@L[cds.sales/homepage/segments/default:domain-banner-search-text]@L]";
  - domainSearchParams.formSize              = domainSearchParams.formSize || "lg";

  //- pages can pass any value besides "sm" or "lg" to reset to normal sized inputs
  case domainSearchParams.formSize
    when "sm"
      - buttonClass = "btn-sm"
      - inputClass = "input-sm"
    when "lg"
      - buttonClass = "btn-lg"
      - inputClass = "input-lg"
    default
      - buttonClass = ""
      - inputClass = ""

  atlantis:webstash(type="css")
    style
      :less
        .search-text { display: none; }
        .search-icon { font-size: 22px; }
        @media (min-width: 768px) {
          .search-text { display: inline; }
          .search-icon { display: none; }
        }
 
  form.domain-search-form(method="get" action!="[@T[link:<external linktype='siteurl' path='' parammode='explicit'/>]@T]/api/dpp/search/single")
    input(type="hidden",name="ci",value=domainSearchParams.cicode)
    input(type="hidden",name="checkAvail",value="1")
    .input-group
      label.searchInput.sr-only(for='domain-name-input') !{domainSearchParams.placeholderText}
      input#domain-name-input.searchInput.form-control(class=inputClass type='text' placeholder!='#{domainSearchParams.placeholderText}' name='domainToCheck' maxlength='63')
      span.input-group-btn
        button.btn.btn-primary(class=buttonClass type='submit' data-ci='#{domainSearchParams.cicode}') 
          span.search-icon.uxicon.uxicon-magnifying-glass
          span.search-text !{domainSearchParams.buttonText}
  script.
    $(".domain-search-form").on('submit', function(e) {
      var input = $(this).find("input[name='domainToCheck']");
      if (input && (input.val() == null || input.val() == "")) {
        e.preventDefault();
        window.location = '[@T[link:<external linktype="siteurl" path="" parammode="explicit"/>]@T]/domains/domain-name-search.aspx';
      }
    });

- domainSearchOffersInputCssRendered = false;
mixin domainSearchOffersInput(prms)
  
  - prms                          = prms || {};
  - prms.tlds                     = prms.tlds || "['com','co','org','net']"; /* or can be a name of your variable that holds them ... like "myObj.tldArrary" */
  - prms.defaultTld               = prms.defaultTld || 'com';
  - prms.searchNowCallbackFn      = prms.searchNowCallbackFn || "domainSearchFormSubmit"; /* you need to code a function taking the domain name as a string input */
  - prms.maxDomainLength          = prms.maxDomainLength || 63;
  - prms.formId                   = (prms.formId || "domain-search-offers-input").replace(/-/gi,'');
  - prms.title                    = prms.title || "title";
  - prms.cicode                   = prms.cicode || "";
  - prms.placeholderText          = prms.placeholderText || "placeholderText";
  - prms.buttonText               = prms.buttonText || "placeholderText";
  - prms.infoTypeHere             = prms.infoTypeHere || "placeholderText";
  - prms.infoErrorEligibility     = prms.infoErrorEligibility || "placeholderText";
  - prms.infoInvalidTld           = prms.infoInvalidTld || "placeholderText";
  - prms.infoDupDomainInCart      = prms.infoDupDomainInCart || "placeholderText";
  - prms.dupDomainInCartCiCode    = prms.dupDomainInCartCiCode || "";
    
  form(id!="#{prms.formId}")
    .row
      .col-md-12
        if(prms.title)
          h2.headline-primary.get-a-domain-text !{prms.title}
    .row
      .col-md-12.offer-search-box
          .input-group
            input.form-control.input-lg.search-form-input.searchInput.helveticafont(type="text" placeholder!="#{prms.placeholderText}" name="domainToCheck" autocomplete="off")
            span.input-group-btn
              button.btn.btn-primary.btn-lg.offer-search-btn(type="button" name="searchButton" data-ci="#{prms.cicode}") !{prms.buttonText}
    .row.domain-search-messaging-row
      .col-md-12
        .search-message.headline-primary.speech-shape-upsidedown.speech-shape-upsidedown-yellow.type-your-business-name !{prms.infoTypeHere}
        .search-message.headline-primary.speech-shape-upsidedown.speech-shape-upsidedown-orange.domain-eligibility-fail !{prms.infoErrorEligibility}
        .search-message.headline-primary.speech-shape-upsidedown.speech-shape-upsidedown-orange.invalid-TLD-entered !{prms.infoInvalidTld}
        .search-message.headline-primary.speech-shape-upsidedown.speech-shape-upsidedown-orange.dup-domain-fail(data-tokenize!='[@T[link:<external linktype="carturl" path="/basket.aspx" ><param name="ci" value="#{prms.dupDomainInCartCiCode}" /></external>]@T]') !{prms.infoDupDomainInCart}
  
  unless(domainSearchOffersInputCssRendered )
    - domainSearchOffersInputCssRendered = true;
    atlantis:webstash(type="css")
      style.
        .search-message { 
          display: none; 
          margin-top:20px; 
        }
        .domain-search-messaging-row {
          padding-bottom: 40px;
        }
        /*  speech */
        .speech-shape-upsidedown {
          line-height: 1.9em;
          font-size: 18px;
          padding: 5px 17px;
          color: #fff;
          display: inline-block;
          position: relative;
          margin-bottom: 20px;
          z-index: 2;
        }
        .speech-shape-upsidedown .shape-text {
          position: relative;
          z-index: 40;
        }
        .speech-shape-upsidedown:before {
          content: '';
          position: absolute;
          top: -15px;
          left: 0;
          border-bottom: 15px solid;
          border-right: 15px solid transparent;
        }
        .speech-shape-upsidedown:after {
          content: '';
          position: absolute;
          height: 100%;
          width:20px;
          right: -6px;
          top: 0;
          transform: skew(12deg, 0);
          z-index: 1;
        }
        .speech-shape-upsidedown.speech-shape-upsidedown-green {
          background-color: #008a32;
        }
        .speech-shape-upsidedown.speech-shape-upsidedown-green:before {
          border-bottom-color: #008a32;
        }
        .speech-shape-upsidedown.speech-shape-upsidedown-green:after {
          background-color: #008a32;
        }
        .speech-shape-upsidedown.speech-shape-upsidedown-orange {
          background-color: #ef6c0f;
        }
        .speech-shape-upsidedown.speech-shape-upsidedown-orange a {
          color: #fff;
        }
        .speech-shape-upsidedown.speech-shape-upsidedown-orange:before {
          border-bottom-color: #ef6c0f;
        }
        .speech-shape-upsidedown.speech-shape-upsidedown-orange:after {
          background-color: #ef6c0f;
        }
        .speech-shape-upsidedown.speech-shape-upsidedown-white {
          background-color: #fff;
          color: #333;
        }
        .speech-shape-upsidedown.speech-shape-upsidedown-white:before {
          border-bottom-color: #fff;
        }
        .speech-shape-upsidedown.speech-shape-upsidedown-white:after {
          background-color: #fff;
        }
        .speech-shape-upsidedown.speech-shape-upsidedown-yellow {
          background-color: #fedc45;
          color: #333;
        }
        .speech-shape-upsidedown.speech-shape-upsidedown-yellow:before {
          border-bottom-color: #fedc45;
        }
        .speech-shape-upsidedown.speech-shape-upsidedown-yellow:after {
          background-color: #fedc45;
        }

        /* (end) speech */
  atlantis:webstash(type="js")
    script.
      var #{prms.formId} = {
         executeFnByName: function(name, context) {
          
          var args = [] // - original code doesn't work in IE8 [].slice.call(arguments).splice(2);
          for(var i=2; i < arguments.length; i++){
            args.push(arguments[i]);
          }
          var namespaces = name.split(".");
          var func = namespaces.pop();
          for(var i = 0; i < namespaces.length; i++) {
            context = context[namespaces[i]];
          }
          return context[func].apply(this, args);

        },
        validateSubmit: function(e){

          e.preventDefault();
          var domainName = #{prms.formId}.trimmedDomainName(false);
          if((domainName && domainName.length==0) || !domainName) return false;

          domainName = domainName.toLowerCase();
          domainName = #{prms.formId}.formatDomainWithDefaultTldIfNoneSpecified(domainName);
          if(!#{prms.formId}.ensureValidTld(domainName)) {
            return;
          }
          var functionName = '#{prms.searchNowCallbackFn}';
          if(functionName.length > 0)  {
            #{prms.formId}.executeFnByName(functionName, window, e, domainName);
          }

        },
        trimmedDomainName: function(isKeyPress){
          
          var $form = $("##{prms.formId}"),
            $textInput = $form.find('input[name="domainToCheck"]'),
            domainName = $textInput.val();
          if((domainName && domainName.length==0) || !domainName) return null;

          domainName = #{prms.formId}.reformatDomainToValidLength($textInput, domainName, isKeyPress);
          return domainName;

        },
        reformatDomainToValidLength: function($textInput, domain, isKeyPress){

          var idx = domain.indexOf('.'),
              hasTld = idx > -1,
              sld = hasTld ? domain.substring(0, idx) : domain,
              tld = hasTld ? domain.substring(idx+1) : '',
              needsTrimmed = ((idx == -1) ? domain.length > #{prms.maxDomainLength} : idx > #{prms.maxDomainLength}); /* 63 is the magic number for max length of a domain name */        
          sld = needsTrimmed ? sld.substring(0, #{prms.maxDomainLength}) : sld;
          
          var domainName = sld + ((tld!='') ? '.' + tld : '');
          if(needsTrimmed) {
            $textInput.val(domainName);
          }
          return domainName;

        },
        ensureValidTld: function() {

          var $form = $("##{prms.formId}"),
              $textInput = $form.find('input[name="domainToCheck"]'),
              domainName = $textInput.val(); 
              validTld = #{prms.formId}.hasTldValid(domainName);
          $form.find('.search-message').hide();
          if(validTld) {
            $form.find('.type-your-business-name').show();
          } else {
            $form.find('.invalid-TLD-entered').show();
          }
          return validTld;
          
        },
        hasTldValid: function(domain) {

          domain = $.trim(domain || "");
          var idx = domain.indexOf('.'), isValid = false;
          if(!domain || domain.length == 0 || idx == -1) return true;

          var domainsTld = domain.substring(idx+1).toLowerCase();
          $.each(#{prms.tlds}, function(idx, tld) {
            if(tld.toLowerCase() === domainsTld) {
              isValid = true;
            }
          });
          return isValid;

        },
        formatDomainWithDefaultTldIfNoneSpecified: function(domain) {

          if(domain.indexOf('.') > 0) return domain;
          return domain + '.' + #{prms.defaultTld};

        },
        getParameterByName: function (name) {

          name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
          var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"), results = regex.exec(location.search);
          return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));

        }
      };

      $(document).ready(function(){

        $("##{prms.formId}").on('click', 'button.offer-search-btn', function(){
          $("##{prms.formId}").submit();
        });

        $("##{prms.formId}").on('submit', #{prms.formId}.validateSubmit);
        $("##{prms.formId}").on('keyup', function(e){ 
          if(e.which == 13) return;
          var domainName = #{prms.formId}.trimmedDomainName(true);
          if(!domainName || domainName.length == 0) return;
          domainName = #{prms.formId}.formatDomainWithDefaultTldIfNoneSpecified(domainName);
          #{prms.formId}.ensureValidTld(domainName);
        });


        //- display error on return from DPP's TLD eligibility requirements failure
        var tldErr = #{prms.formId}.getParameterByName('tldRegErr'),
            dppHasError = tldErr.length > 0,
            dupErr = #{prms.formId}.getParameterByName('dppError');

        if(dppHasError) {
          //- note by default tldRegErr will be on the url query string
          //- if it's a dup, dpp will add in an additional parameter to let us know
          switch(dupErr){
            
            case("dup"):
              $('##{prms.formId} .search-message').hide();
              $('##{prms.formId} .dup-domain-fail').show();
              break;

            default:
              var $failArea = $('##{prms.formId} .domain-eligibility-fail'), 
                  html = $failArea.html();
              html = html.replace(/\{0\}/gi, tldErr)
              $failArea.html(html);
              $('##{prms.formId} .search-message').hide();
              $('##{prms.formId} .domain-eligibility-fail').show();
              break;

          }
        } else {
          $('##{prms.formId} .search-message').hide();
          $('##{prms.formId} .type-your-business-name').show();
        }
      });