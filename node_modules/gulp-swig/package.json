{
  "name": "gulp-swig",
  "version": "0.6.0",
  "description": "Swig Plugin for Gulp",
  "keywords": [
    "gulpplugin",
    "swig"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/colynb/gulp-swig"
  },
  "author": {
    "name": "Colyn Brown",
    "email": "colyn.brown@gmail.com"
  },
  "dependencies": {
    "event-stream": "~3.0.15",
    "clone": "~0.1.9",
    "gulp-util": "~2.2.14",
    "swig": "~1.3.0",
    "gulp": "~3.5.1"
  },
  "main": "index.js",
  "engines": {
    "node": ">= 0.4.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "devDependencies": {
    "mocha": "~1.12.0",
    "chai": "~1.7.2",
    "swig-marked": "~0.0.1"
  },
  "readme": "## Information\n\n<table>\n<tr>\n<td>Package</td><td>gulp-swig</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>Compile Swig templates</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>â‰¥ 0.8</td>\n</tr>\n</table>\n\n[![Build Status](https://travis-ci.org/colynb/gulp-swig.png?branch=master)](https://travis-ci.org/colynb/gulp-swig)\n\n[![NPM](https://nodei.co/npm/gulp-swig.png?stars&downloads)](https://npmjs.org/package/gulp-swig)\n\n[Learn more about gulp.js, the streaming build system](http://gulpjs.com)\n\n[Learn more about templating with Swig](http://paularmstrong.github.io/swig/)\n\n## Install with NPM\n\n```\n$ npm install --save-dev gulp-swig\n```\n\n## Usage\n\nCompile to HTML\n\n```javascript\nvar swig = require('gulp-swig');\n\ngulp.task('templates', function() {\n  gulp.src('./lib/*.html')\n    .pipe(swig())\n    .pipe(gulp.dest('./dist/'))\n});\n```\n\nInject variables from data object into templates\n\n```javascript\nvar swig = require('gulp-swig');\nvar opts = {\n  data: {\n    headline: \"Welcome\"\n  }\n};\ngulp.task('templates', function() {\n  gulp.src('./lib/*.html')\n    .pipe(swig(opts))\n    .pipe(gulp.dest('./dist/'))\n});\n```\n\nInject variables from JSON file into templates\n\nIf you've created a template called ```homepage.html``` you can create a JSON file called ```homepage.json``` to contain any variables you want injected into the template.\n\n```javascript\nvar swig = require('gulp-swig');\nvar opts = {\n  load_json: true\n};\ngulp.task('templates', function() {\n  gulp.src('./lib/*.html')\n    .pipe(swig(opts))\n    .pipe(gulp.dest('./dist/'))\n});\n```\n\nInject variables from both a data object and JSON file into templates\n\n```javascript\nvar swig = require('gulp-swig');\nvar opts = {\n  load_json: true,\n  data: {\n    headline: \"Welcome\"\n  }\n};\ngulp.task('templates', function() {\n  gulp.src('./lib/*.html')\n    .pipe(swig(opts))\n    .pipe(gulp.dest('./dist/'))\n});\n```\n\nBy default, gulp-swig will look for the json data file in the same location as the template. If you have your data in a different location, there's an option for that:\n\n```javascript\nvar swig = require('gulp-swig');\nvar opts = {\n  load_json: true,\n  json_path: './data/',\n  data: {\n    headline: \"Welcome\"\n  }\n};\ngulp.task('templates', function() {\n  gulp.src('./lib/*.html')\n    .pipe(swig(opts))\n    .pipe(gulp.dest('./dist/'))\n});\n```\n\nInject variables using the [Swig::setDefaults](http://paularmstrong.github.io/swig/docs/api/#setDefaults) method, and set other swig defaults.\n\n```javascript\nvar swig = require('gulp-swig');\nvar opts = {\n  defaults: { cache: false, locals: { site_name: \"My Blog\" } },\n  data: {\n    headline: \"Welcome\"\n  }\n};\ngulp.task('templates', function() {\n  gulp.src('./lib/*.html')\n    .pipe(swig(opts))\n    .pipe(gulp.dest('./dist/'))\n});\n```\n\nEnable swig extensions using the setup option.\n\n```javascript\nvar swig = require('gulp-swig');\nvar marked = require('swig-marked');\nvar opts = {\n  setup: function(swig) {\n    marked.useTag(swig, 'markdown');\n  }\n};\ngulp.task('templates', function() {\n  gulp.src('./lib/*.html') // containing markdown tag: {% markdown %}**hello**{% endmarkdown %}\n    .pipe(swig(opts))\n    .pipe(gulp.dest('./dist/'))\n});\n```\n\n\n\n## LICENSE\n\n(MIT License)\n\nCopyright (c) 2013 Colyn Brown\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/colynb/gulp-swig/issues"
  },
  "homepage": "https://github.com/colynb/gulp-swig",
  "_id": "gulp-swig@0.6.0",
  "_from": "gulp-swig@^0.6.0"
}
