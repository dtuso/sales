var through = require("through2"),
  gutil = require("gulp-util"),
  fs = require('fs'),
  chalk = require('chalk'),
  cds = require('cds-lib'),
  path = require('path'),
  mkdirp = require('mkdirp');


module.exports = function(options) {
  "use strict";

  var opts = options || {};

  function cdsm(file, enc, callback) {

    if (!file.frontMatter || !file.frontMatter.location) {
      this.push(file);
      callback();
      return;
    }

    if (file.isNull()) {
      this.push(file);
      return callback();
    }

    if (file.isStream()) {
      this.emit("error",
        new gutil.PluginError("gulp-cdsm", "Stream content is not supported"));
      return callback();
    }

    if (file.isBuffer()) {

      var logmsg = '[' + chalk.green('cds') + ']';

      // get file content
      var content = {
        body: String(file.contents),
        opts: file.frontMatter.opts || {},
        attributes: file.frontMatter
      };

      cds.upload(content, function(err, uploaded) {
        if (err) {
          console.log(logmsg, chalk.red('ERROR: ' + err.message));
        }
        if (uploaded) {
          console.log(logmsg, chalk.gray(file.relative), chalk.green('uploaded!'));
          console.log('\n\tID:', chalk.cyan(uploaded) + '\n');
        }
      });

      this.push(file);
      callback();

    }

  } // end cdsm
  return through.obj(cdsm);
};
module.exports.cds = cds;
